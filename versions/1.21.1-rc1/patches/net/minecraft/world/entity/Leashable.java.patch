--- a/net/minecraft/world/entity/Leashable.java
+++ b/net/minecraft/world/entity/Leashable.java
@@ -40,7 +_,7 @@
 
     default void setDelayedLeashHolderId(int i) {
         this.setLeashData(new Leashable.LeashData(i));
-        dropLeash((Entity)this, false, false);
+        dropLeash((Entity & Leashable) this, false, false);
     }
 
     @Nullable
@@ -49,7 +_,7 @@
             return new Leashable.LeashData(Either.left(compoundTag.getCompound("leash").getUUID("UUID")));
         } else {
             if (compoundTag.contains("leash", 11)) {
-                Either<UUID, BlockPos> either = NbtUtils.readBlockPos(compoundTag, "leash").map(Either::right).orElse(null);
+                Either<UUID, BlockPos> either = NbtUtils.readBlockPos(compoundTag, "leash").<Either<UUID, BlockPos>>map(Either::right).orElse(null);
                 if (either != null) {
                     return new Leashable.LeashData(either);
                 }
@@ -101,7 +_,7 @@
     }
 
     default void dropLeash(boolean flag, boolean flag1) {
-        dropLeash((Entity)this, flag, flag1);
+        dropLeash((Entity & Leashable) this, flag, flag1);
     }
 
     private static <E extends Entity & Leashable> void dropLeash(E entity, boolean flag, boolean flag1) {
@@ -160,7 +_,7 @@
     }
 
     default void elasticRangeLeashBehaviour(Entity entity, float f) {
-        legacyElasticRangeLeashBehaviour((Entity)this, entity, f);
+        legacyElasticRangeLeashBehaviour((Entity & Leashable)this, entity, f);
     }
 
     private static <E extends Entity & Leashable> void legacyElasticRangeLeashBehaviour(E entity, Entity entity1, float f) {
@@ -173,7 +_,7 @@
     }
 
     default void setLeashedTo(Entity entity, boolean flag) {
-        setLeashedTo((Entity)this, entity, flag);
+        setLeashedTo((Entity & Leashable) this, entity, flag);
     }
 
     private static <E extends Entity & Leashable> void setLeashedTo(E entity, Entity entity1, boolean flag) {
@@ -196,7 +_,7 @@
 
     @Nullable
     default Entity getLeashHolder() {
-        return getLeashHolder((Entity)this);
+        return getLeashHolder((Entity & Leashable) this);
     }
 
     @Nullable
